datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

generator client {
    provider = "prisma-client-js"
}

// Donation receipt jurisdictions
enum Jurisdiction {
    CRA
    IRS
    // Add additional jurisdictions as needed
}

model charity {
    id                            String                  @id @default(uuid())
    charity_name                  String?
    registration_number           String?
    contact_first_name            String?
    contact_last_name             String?
    contact_email                 String?
    contact_mobile_phone          String?
    registered_office_address     String?
    date_of_birth                 String? // Eg. 1990-01-01
    city                          String?
    state                         String?
    postCode                      String?
    countryCode                   String? // Eg. Canada, United States Of America
    wallet_address                String                  @unique // Wallet address for receiving donations
    transak_stream_wallet_address String?                 @unique // Wallet address for off-ramping
    is_profile_complete           Boolean                 @default(false)
    slug                          String?                 @unique
    created_at                    DateTime                @default(now())
    donation_receipts             donation_receipt[]
    charity_fund_transfer         charity_fund_transfer[]
}

model charity_fund_transfer {
    id                 String   @id @default(uuid())
    charity_id         String
    charity            charity  @relation(fields: [charity_id], references: [id])
    amount_wei         BigInt // Amount in Wei
    fiat_equivalent    Float? // Optional: Fiat value at the time of transfer
    transaction_hash   String   @unique
    destination_wallet String
    chain_id           String?
    gas_fee_wei        BigInt? // Optional: Gas fee for transaction
    transfer_reason    String? // Optional: Description of transfer
    created_at         DateTime @default(now())
}

model donor {
    id                  String             @id @default(uuid())
    wallet_address      String             @unique
    email               String?            @unique
    first_name          String?
    last_name           String?
    address             String?
    donation_receipts   donation_receipt[]
    is_profile_complete Boolean            @default(false)
    created_at          DateTime           @default(now())
    updated_at          DateTime           @updatedAt
}

model donation_receipt {
    id                   String       @id @default(uuid())
    receipt_number       String       @unique
    donation_date        DateTime
    fiat_amount          Float
    crypto_amount_wei    BigInt? // Made optional since supabase giving migration error
    transaction_hash     String       @unique
    chainId              String? // Made optional since supabase giving migration error
    jurisdiction         Jurisdiction @default(CRA)
    jurisdiction_details Json?
    charity_id           String?
    charity              charity?     @relation(fields: [charity_id], references: [id])
    donor_id             String?
    donor                donor?       @relation(fields: [donor_id], references: [id])
    created_at           DateTime     @default(now())
    updated_at           DateTime     @updatedAt
}

model donation_receipt_counter {
    jurisdiction Jurisdiction @id
    counter      Int          @default(0)
}
